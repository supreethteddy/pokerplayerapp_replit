-- CORRECTED WAITLIST TABLE DEPLOYMENT SCRIPT
-- This script removes the foreign key constraint that was causing the error
-- Copy and paste this ENTIRE script into Supabase Dashboard > SQL Editor

-- Step 1: Create waitlist table without foreign key constraints first
CREATE TABLE IF NOT EXISTS public.waitlist (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    player_id INTEGER NOT NULL,
    table_id UUID,
    game_type TEXT NOT NULL DEFAULT 'Texas Hold''em',
    min_buy_in DECIMAL(10, 2) NOT NULL,
    max_buy_in DECIMAL(10, 2) NOT NULL,
    position INTEGER NOT NULL DEFAULT 1,
    status TEXT NOT NULL DEFAULT 'waiting',
    requested_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    seated_at TIMESTAMP WITH TIME ZONE,
    notes TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    CONSTRAINT waitlist_status_check CHECK (status IN ('waiting', 'seated', 'cancelled'))
);

-- Step 2: Create indexes for performance
CREATE INDEX IF NOT EXISTS idx_waitlist_player_id ON public.waitlist(player_id);
CREATE INDEX IF NOT EXISTS idx_waitlist_table_id ON public.waitlist(table_id);
CREATE INDEX IF NOT EXISTS idx_waitlist_status ON public.waitlist(status);
CREATE INDEX IF NOT EXISTS idx_waitlist_position ON public.waitlist(position);
CREATE INDEX IF NOT EXISTS idx_waitlist_requested_at ON public.waitlist(requested_at);

-- Step 3: Enable Row Level Security
ALTER TABLE public.waitlist ENABLE ROW LEVEL SECURITY;

-- Step 4: Create RLS policy for full access
CREATE POLICY "Allow full access to waitlist" ON public.waitlist
    FOR ALL 
    TO public
    USING (true)
    WITH CHECK (true);

-- Step 5: Insert test data using your existing player IDs
INSERT INTO public.waitlist (player_id, game_type, min_buy_in, max_buy_in, position, notes)
VALUES 
    (10, 'Texas Hold''em', 1000, 10000, 1, 'Test entry - viggy gana'),
    (2, 'Texas Hold''em', 500, 5000, 2, 'Test entry - New Player'),
    (3, 'Omaha', 2000, 20000, 1, 'Test entry - Supabase Direct')
ON CONFLICT (id) DO NOTHING;

-- Step 6: Verify table creation and data
SELECT 
    'Waitlist table created successfully' as status,
    COUNT(*) as test_records
FROM public.waitlist;

-- Step 7: Show sample data
SELECT 
    id,
    player_id,
    game_type,
    min_buy_in,
    max_buy_in,
    status,
    created_at
FROM public.waitlist 
LIMIT 5;