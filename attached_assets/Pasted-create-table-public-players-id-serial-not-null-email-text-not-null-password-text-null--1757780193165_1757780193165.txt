create table public.players (
  id serial not null,
  email text not null,
  password text null,
  first_name text not null,
  last_name text not null,
  phone text not null,
  kyc_status text not null default 'pending'::text,
  created_at timestamp with time zone null default now(),
  balance text not null default '0.00'::text,
  total_deposits text not null default '0.00'::text,
  total_withdrawals text not null default '0.00'::text,
  total_winnings text not null default '0.00'::text,
  total_losses text not null default '0.00'::text,
  games_played integer not null default 0,
  hours_played text not null default '0.00'::text,
  is_active boolean null default true,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  full_name text null,
  last_login_at timestamp without time zone null,
  universal_id uuid null default gen_random_uuid (),
  credit_eligible boolean null default false,
  clerk_user_id text null,
  nickname text null,
  current_credit numeric null default '0'::numeric,
  credit_limit numeric null default '0'::numeric,
  email_verified boolean null default false,
  pan_card_number text null,
  player_code text null,
  verification_token text null,
  token_expiry timestamp without time zone null,
  constraint players_pkey primary key (id),
  constraint players_clerk_user_id_unique unique (clerk_user_id),
  constraint players_email_key unique (email),
  constraint players_pan_format_chk check (
    (
      (pan_card_number is null)
      or (pan_card_number ~ '^[A-Z]{5}[0-9]{4}[A-Z]$'::text)
    )
  )
) TABLESPACE pg_default;

create index IF not exists idx_players_credit_eligible on public.players using btree (credit_eligible) TABLESPACE pg_default;

create unique INDEX IF not exists players_player_code_key on public.players using btree (player_code) TABLESPACE pg_default;

create index IF not exists idx_players_clerk_user_id on public.players using btree (clerk_user_id) TABLESPACE pg_default;

create trigger players_updated_at_trigger BEFORE
update on players for EACH row
execute FUNCTION update_modified_column ();

create trigger update_players_updated_at BEFORE
update on players for EACH row
execute FUNCTION update_updated_at_column ();